/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package plurker.ui;

import com.google.jplurk_oauth.module.Timeline;
import java.awt.Component;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import plurker.source.PlurkPool;
import plurker.source.PlurkSourcer;

/**
 *
 * @author SkyforceShen
 */
public class TabbedPlurksPanel extends javax.swing.JPanel {

    /**
     * Creates new form TabbedPlurksPanel
     */
    public TabbedPlurksPanel(PlurkPool plurkPool) {
        initComponents();
        this.plurkPool = plurkPool;

        all = new PlurksPanel(plurkPool, Timeline.Filter.None, true);
        my = new PlurksPanel(plurkPool, Timeline.Filter.only_user, false);
        privates = new PlurksPanel(plurkPool, Timeline.Filter.only_private, false);
        response = new PlurksPanel(plurkPool, Timeline.Filter.only_responded, false);
        liked = new PlurksPanel(plurkPool, Timeline.Filter.only_favorite, false);
        plurksPanel = new PlurksPanel[]{all, my, privates, response, liked};

        this.jPanel_All.add(all, java.awt.BorderLayout.CENTER);
        this.jPanel_Liked.add(liked, java.awt.BorderLayout.CENTER);
        this.jPanel_My.add(my, java.awt.BorderLayout.CENTER);
        this.jPanel_Private.add(privates, java.awt.BorderLayout.CENTER);
        this.jPanel_Response.add(response, java.awt.BorderLayout.CENTER);

//        all.updatePlurks();
    }

    public void setPlurkPool(PlurkPool plurkPool) {
        this.plurkPool = plurkPool;
        for(PlurksPanel panel: plurksPanel){
            panel.setPlurkPool(plurkPool);
        }
    }
    
    private PlurksPanel[] plurksPanel;
    private PlurkPool plurkPool;
    private PlurksPanel all, my, privates, response, liked;

    public void updatePlurks(int tabIndex) {
        plurksPanel[tabIndex].updatePlurks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel_All = new javax.swing.JPanel();
        jPanel_My = new javax.swing.JPanel();
        jPanel_Private = new javax.swing.JPanel();
        jPanel_Response = new javax.swing.JPanel();
        jPanel_Liked = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel_All.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("所有", jPanel_All);

        jPanel_My.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("我的", jPanel_My);

        jPanel_Private.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("私人", jPanel_Private);

        jPanel_Response.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("回應", jPanel_Response);

        jPanel_Liked.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("讚", jPanel_Liked);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
//        System.out.println(evt);
        JTabbedPane tab = (JTabbedPane) evt.getSource();
        JPanel panel = (JPanel) tab.getSelectedComponent();
        if (panel.getComponentCount() == 1) {
            PlurksPanel plurksPanel = (PlurksPanel) panel.getComponent(0);
            plurksPanel.updatePlurks();
        }

    }//GEN-LAST:event_jTabbedPane1StateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel_All;
    private javax.swing.JPanel jPanel_Liked;
    private javax.swing.JPanel jPanel_My;
    private javax.swing.JPanel jPanel_Private;
    private javax.swing.JPanel jPanel_Response;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        PlurkSourcer.setDoValidToken(false);
        PlurkSourcer plurkSourcerInstance = PlurkerApplication.getPlurkSourcerInstance();
        PlurkPool plurkpool = new PlurkPool(plurkSourcerInstance);

        JFrame frame = new JFrame();
        frame.add(new TabbedPlurksPanel(plurkpool));
        frame.pack();
        frame.setVisible(true);
    }

    public void setPlurker(PlurkerApplication plurker) {
        all.setPlurker(plurker);
        my.setPlurker(plurker);
        privates.setPlurker(plurker);
        response.setPlurker(plurker);
        liked.setPlurker(plurker);
    }
}
