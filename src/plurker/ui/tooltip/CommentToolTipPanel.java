/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package plurker.ui.tooltip;

import com.google.jplurk_oauth.data.Comment;
import com.google.jplurk_oauth.data.Plurk;
import com.google.jplurk_oauth.data.UserInfo;
import java.awt.Container;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.json.JSONException;
import plurker.source.PlurkFormater;
import plurker.source.PlurkPool;
import plurker.source.PlurkSourcer;
import plurker.ui.ContentPanel;
import plurker.ui.GUIUtil;

/**
 *
 * @author SkyforceShen
 */
public class CommentToolTipPanel extends ToolTipPanel {

    /**
     * Creates new form CommentToolTipPanel
     */
    public CommentToolTipPanel(PlurkPool plurkPool, Comment comment, ContentPanel contentPanel, JEditorPane responseInput) {
        super(plurkPool, contentPanel);
        initComponents();
        this.comment = comment;
        this.responseInput = responseInput;
        init();
    }
    private Comment comment;
    private JEditorPane responseInput;

    private void init() {
        try {
            long userID = sourcer.getUserID();
            long ownerId = comment.getOwnerId();
            long plurkId = comment.getPlurkId();
            Plurk plurk = plurkPool.getPlurk(plurkId);
            long plurkOwnerId = (null != plurk) ? plurk.getOwnerId() : -1;

            if (ownerId == userID) {
                //不用回覆自己
                jLabel_Reply.setVisible(false);
            }
            //不是自己的噗, 就只能刪自己的回應
            if (plurkOwnerId != userID && ownerId != userID) {
                jLabel_Delete.setVisible(false);
            }


//            comment.getpo
//                    String timeText = PlurkFormater.getTimeText(postedDate);
        } catch (JSONException ex) {
            Logger.getLogger(CommentToolTipPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            String timeText = PlurkFormater.getTimeText(comment.getPostedDate());
            this.jLabel_Time.setText(timeText);
        } catch (ParseException ex) {
            Logger.getLogger(CommentToolTipPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel_Time = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel_Reply = new javax.swing.JLabel();
        jLabel_Delete = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel_Time.setText("@今天");
        jPanel2.add(jLabel_Time);
        jLabel_Time.getAccessibleContext().setAccessibleDescription("");

        add(jPanel2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel_Reply.setText("回覆");
        jLabel_Reply.setToolTipText("回應這個人");
        jLabel_Reply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_ReplyMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_ReplyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_ReplyMouseExited(evt);
            }
        });
        jPanel1.add(jLabel_Reply);

        jLabel_Delete.setText("刪除");
        jLabel_Delete.setToolTipText("刪除此則回應");
        jLabel_Delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_DeleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_ReplyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_ReplyMouseExited(evt);
            }
        });
        jPanel1.add(jLabel_Delete);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_ReplyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ReplyMouseEntered
        JLabel source = (JLabel) evt.getSource();
        source.setFont(GUIUtil.boldFont);
    }//GEN-LAST:event_jLabel_ReplyMouseEntered

    private void jLabel_ReplyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ReplyMouseExited
        JLabel source = (JLabel) evt.getSource();
        source.setFont(GUIUtil.font);
    }//GEN-LAST:event_jLabel_ReplyMouseExited

    private void jLabel_DeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_DeleteMouseClicked
        try {
            int confirm = JOptionPane.showConfirmDialog(this, "確定要刪除此回應嗎?", "", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // TODO add your handling code here:
                long responseID = comment.getId();
                long plurkId = comment.getPlurkId();
                if (sourcer.responseDelete(responseID, plurkId)) {
                    //進行UI的刪除動作
                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            ContentPanel plurkPanel = contentPanel.getPlurkPanel();
                            plurkPanel.minusNofityLabelCount();
                            Container parent = contentPanel.getParent();
                            parent.remove(contentPanel);
                            contentPanel = null;
                            SwingUtilities.updateComponentTreeUI(parent);
//                            contentPanel.minusNofityLabelCount();
                        }
                    });
                    List<Comment> comments = plurkPool.getComments(comment.getPlurkId(), 0, false);
                    comments.remove(comment);
                }
            }
        } catch (JSONException ex) {
            Logger.getLogger(CommentToolTipPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel_DeleteMouseClicked

    private void jLabel_ReplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ReplyMouseClicked
        if (null != responseInput) {
            try {
                long ownerId = comment.getOwnerId();
                UserInfo userInfo = plurkPool.getUserInfo(ownerId);
                if (null != userInfo) {
                    String nickName = userInfo.getNickName();
                    String text = this.responseInput.getText();
                    String newtext = "@" + nickName + ": ";
                    this.responseInput.setText(newtext);
                    responseInput.grabFocus();
                }
            } catch (JSONException ex) {
                Logger.getLogger(CommentToolTipPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jLabel_ReplyMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel_Delete;
    private javax.swing.JLabel jLabel_Reply;
    private javax.swing.JLabel jLabel_Time;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
